#lang racket

(require graph)

(define g (weighted-graph/directed null))

(add-directed-edge! g 1 2 4)
(add-directed-edge! g 1 4 1)
(add-directed-edge! g 2 1 74)
(add-directed-edge! g 2 3 2)
(add-directed-edge! g 2 5 12)
(add-directed-edge! g 3 2 12)
(add-directed-edge! g 3 10 12)
(add-directed-edge! g 3 6 74)
(add-directed-edge! g 4 7 22)
(add-directed-edge! g 4 5 32)
(add-directed-edge! g 5 8 33)
(add-directed-edge! g 5 4 66)
(add-directed-edge! g 5 6 76)
(add-directed-edge! g 6 10 21)
(add-directed-edge! g 6 9 11)
(add-directed-edge! g 7 3 12)
(add-directed-edge! g 7 8 10)
(add-directed-edge! g 8 7 2)
(add-directed-edge! g 8 9 72)
(add-directed-edge! g 9 10 7)
(add-directed-edge! g 9 6 31)
(add-directed-edge! g 9 8 18)
(add-directed-edge! g 10 6 8)
(define source 1)
(dijkstra g source)
